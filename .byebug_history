c
@stats.first.each {|statistic| p "Game #{statistic.last}" if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic.last if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic.class if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic[statistic.first] if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic.first if statistic.first.match(/game_/) }
@stats.first.each {|statistic| p statistic if statistic.first.match(/game_/) }
@stats.first
c
@stats.first.each {|x| p "Game_#{@stats.first[x.first]}" if x.first.match(/game_/)}
@stats.first.each {|x| p "Game:" + @stats.first[x.first] if x.first.match(/game_/)}
@stats.first.each {|x| p @stats.first[x.first] if x.first.match(/game_/)}
@stats.first.each {|x| p @stats.first[x] if x.first.match(/game_/)}
@stats.first.each {|x| p @stats.first if x.first.match(/game_/)}
@stats.first.each {|x| p @stats.first[x] if x.first.match(/game_/)}
@stats.first.each {|x| p x if x.first.match(/game_/)}
@stats.first.each {|x| p x[x.first] if x.first.match(/game_/)}
@stats.first.each {|x| p x.first if x.first.match(/game_/)}
@stats.first.each {|x| p x if x.first.match(/game_/)}
@stats.first.each {|x| p x}
@stats.first
@stats
c
statistic[statistic.first.first]
statistic[statistic.first]
statistic.first.first.match(/game_/)
statistic.first.first
statistic.first
statistic
c
statistic.each {|x| p statistic[x.first] if x.first.match(/player_score_/) }
statistic.each {|x| p statistic[x.first] if x.first.match(/dealer_score_/) }
statistic.each {|x| p statistic[x.first] if x.first.match(/game_/) }
statistic.each {|x| p statistic[x.first] if x.match(/game_/) }
statistic.each {|x| p x }
statistic.first.first.match(/game_/)
statistic.first.first.match(/game1_/)
statistic.first.first.match(/game_/)
statistic.first.first
statistic.first
statistic.first.keys
statistic.first
statistic.each {|x| p "---#{x[}"}
statistic.each_with_index {|x, y| p "---#{x}---#{y}"}
statistic.each {|x, y| p "---#{x}---#{y}"}
statistic.methods.grep(/each/)
statistic.class
statistic.each_with_index {|x, i} p "---#{x}---#{i}" }
statistic
c
@stats.first.keys[1..@stats.first.keys.length]
@stats.first.keys[1..2]
@stats.first.keys
@stats
c
statistic.keys[1..2]
statistic.keys
statistics.keys
statistics.keys[1..2]
statistic.keys.each {|x| p statistic[x]}
statistic.keys.each {|x| p x}
statistic.keys.each_with_index {|x, y| p x; p y; }
statistic.keys
statistic = @stats.first
@stats
c
@stats.first['game_0']
@stats
c
@stats.first[":game_0"]
@stats.first[:game_0]
@stats.first
@stats
c
@stats
n
@stats
collection
n
@stats
c
@stats
collection
n
game.id
collection
@stats
c
game.id
c
@stats
c
@stats
c
Game.first.score(:player)
Game.first.score(:dealer)
@stats
c
@games.first.score(:de)
@games.first
@games
@stats
c
a.class
a
Card.where(id: [1,2])
a
c
value
self
c
n
result
n
total_score
c
total_score
c
dealer.total_value(id)
player.total_value(id)
player
g
result
c
player.total_value(id)
dealer.total_value(id)
dealer
total_value
result
c
result
n
result
n
result
n
result[:value]
n
result
n
total_score
n
user.total_value(id)
n
user.total_value(id)
n
result
n
total_score
n
user.total_value(id)
n
user.total_value(id)
result
c
total_score
n
c
@result
result
c
result
c
result
c
result
c
result
c
result
c
player.total_value(id)
dealer.total_value(id)
total_score
result
c
result
c
result
n
result
n
result
n
total_score
n
total_score
c
result
c
result
n
result
n
m
result
n
total_score
c
result
c
result
n
result
n
total_score
c
n
total_score
n
c
n
c
result
n
result
n
result
n
self.dealer.total_value(id)
self.player.total_value(id)
result
n
result[:value] == COMPARE
result
c
greater_then_eq_17?(total_score) && total_score < 21
total_score
c
total_score
c
@result
c
greater_then_21?(total_score)
greater_then_eq_17?(total_score) && total_score < 21
total_score
c
total_score
c
@result
result
c
compare_score(self.dealer.total_value(id), self.player.total_value(id))
result
c
result
self.player.total_value(id)
self.dealer.total_value(id)
Card.where(id: self.game_cards.select {|x| x.user_id ==1 }.map(&:card_id)).map(&:value)
Card.where(id: self.game_cards.select {|x| x.user_id ==2 }.map(&:card_id)).map(&:value)
Card.where(id: self.game_cards.select {|x| x.user_id ==2 }.map(&:card_id)).map(&:face)
Card.where(id: self.game_cards.select {|x| x.user_id ==1 }.map(&:card_id)).map(&:face)
Card.where(id: self.game_cards.select {|x| x.user_id ==1 }.map(&:card_id))
self.game_cards.select {|x| x.user_id ==1 }.map(&:card_id)
self.game_cards.select {|x| x.user_id ==1 }
